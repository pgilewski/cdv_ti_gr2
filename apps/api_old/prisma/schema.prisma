// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int              @id @default(autoincrement())
  email       String           @unique
  password    String
  role        Role             @default(Pracownik)
  permissions UserPermission[]
}

model Permission {
  id    Int              @id @default(autoincrement())
  name  String
  users UserPermission[]
}

model UserPermission {
  userId       Int
  permissionId Int
  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([userId, permissionId])
}

enum Role {
  Pracownik
  Moderator
  Administrator
}

model TaskHour {
  id        Int      @id @default(autoincrement())
  taskId    Int
  userId    Int
  createdAt DateTime @default(now())
  startTime DateTime
  endTime   DateTime
  duration  Int

  task         Task        @relation(fields: [taskId], references: [id])
  WorkDay      WorkDay?    @relation(fields: [workDayId], references: [id])
  workDayId    Int?
  SystemUser   SystemUser? @relation(fields: [systemUserId], references: [id])
  systemUserId Int?
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  workdayId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  type      String

  workday      WorkDay     @relation(fields: [workdayId], references: [id])
  SystemUser   SystemUser? @relation(fields: [systemUserId], references: [id])
  systemUserId Int?
}

model WorkDay {
  id         Int      @id @default(autoincrement())
  userId     Int
  date       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isReviewed Boolean @default(false)
  reviewedBy Int?

  hours        TaskHour[]
  comments     Comment[]
  SystemUser   SystemUser? @relation(fields: [systemUserId], references: [id])
  systemUserId Int?

  @@unique([userId, date])
}

model SystemUser {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  firstName String
  lastName  String

  workDays  WorkDay[]
  taskHours TaskHour[]
  comments  Comment[]
}

model Task {
  id          Int      @id @default(autoincrement())
  projectId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String

  taskHours TaskHour[]
  project   Project    @relation(fields: [projectId], references: [id])
}

model Project {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String

  tasks Task[]
}
